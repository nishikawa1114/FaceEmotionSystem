@startuml
title FaceEmotionAnalyzer API

actor ユーザー
participant FaceEmotionController
participant ErrorController
participant ResponseFactory
actor FaceAPI

ユーザー ->> FaceEmotionController: 画像分析をリクエスト\nPOST 画像URL

alt メディアタイプが不正の場合
    FaceEmotionController -> ErrorController: handleInvalidMediaTypeException()
    ErrorController -> ResponseFactory: エラー時のレスポンス生成\n createErrorResponse(Ecxeption ex)
    ErrorController <-- ResponseFactory: errorResponse: ErrorResponse
    ユーザー <<-- ErrorController: エラー"media type is invalid."

else リクエストパラメータが未入力、または不正な場合
    FaceEmotionController -> ErrorController: handleInvalidRequestBodyException()
    ErrorController -> ResponseFactory: エラー時のレスポンス生成\n createErrorResponse(Ecxeption ex)
    ErrorController <-- ResponseFactory: errorResponse: ErrorResponse
    ユーザー <<-- ErrorController: エラー"request body is invalid."

else リクエストパラメータが正しい場合
    FaceEmotionController ->> FaceAPI: 画像分析をリクエスト\nPOST 画像URL
    FaceEmotionController <<-- FaceAPI: レスポンス(JSON)
    note left: 分析結果 or エラー

    alt 分析結果が取得できた場合
        FaceEmotionController -> ResponseFactory: 正常時のレスポンス生成\n createSuccessResponse(Object data)
        FaceEmotionController <-- ResponseFactory: 分析結果\n responseData: responseData[]
        ユーザー <<- FaceEmotionController: 分析結果\n responseData: responseData[] (JSON))
    else 顔が検出されなかった場合
        FaceEmotionController -> ErrorController: handleNotDetectedException()
        ErrorController -> ResponseFactory: エラー時のレスポンス生成\n createErrorResponse(Ecxeption ex)
        ErrorController <-- ResponseFactory: errorResponse: ErrorResponse
        ユーザー <<-- ErrorController: エラー"face not detected."
        note left : ユーザー側はエラーメッセージにて\nエラーをハンドリング
    else レスポンスがエラーの場合
        FaceEmotionController -> ErrorController: handleFaceApiException()
        ErrorController -> ResponseFactory: エラー時のレスポンス生成\n createFaceApiErrorResponse(Ecxeption ex)
        ErrorController <-- ResponseFactory: FaceApiErrorResponse: FaceApiErrorResponse
        ユーザー <<-- ErrorController: エラー"Face API response is error."
    else FaceAPIサーバーエラー
        FaceEmotionController -> ErrorController: handleException()
        ErrorController -> ResponseFactory: エラー時のレスポンス生成\n createFaceApiErrorResponse(Ecxeption ex)
        ErrorController <-- ResponseFactory: FaceApiErrorResponse: FaceApiErrorResponse
        ユーザー <<-- ErrorController: エラー"Face API server unavalable."
    end

end
@enduml